import isMapValid, { isKeyAccessible } from ".";

const fakeValidMap = [
    [
        {
            type: {
                tileStyle: { colour: "black", textColour: "white" },
                name: "Spawn Point",
                dimensions: { width: 1, height: 1 },
                max: 1,
                min: 1,
                category: "compulsory",
                description: "The point where the player initially spawns",
                key: "SpawnPoint"
            },
            parent: { col: 0, row: 0 },
            rotation: 0
        },
        {
            type: {
                tileStyle: { colour: "gold", textColour: "white" },
                dimensions: { width: 1, height: 1 },
                max: 1,
                min: 1,
                category: "compulsory",
                shelfPlaced: true,
                description:
                    "The key that the player is looking for, this can be placed on top of other items, make sure to hide it well!",
                key: "Key",
                name: "Key"
            },
            parent: { col: 0, row: 1 },
            rotation: 0
        }
    ]
];

const fakeInvalidMap = [
    [
        {
            type: {
                tileStyle: { colour: "black", textColour: "white" },
                name: "Spawn Point",
                dimensions: { width: 1, height: 1 },
                max: 1,
                min: 1,
                category: "compulsory",
                description: "The point where the player initially spawns",
                key: "SpawnPoint"
            },
            parent: { col: 0, row: 0 },
            rotation: 0
        },
        {
            type: {
                tileStyle: { colour: "grey" },
                dimensions: { width: 1, height: 1 },
                draggable: true,
                key: "Wall",
                name: "Wall"
            },
            parent: { col: 0, row: 1 },
            rotation: 0
        }
    ],
    [
        {
            type: {
                tileStyle: { colour: "grey" },
                dimensions: { width: 1, height: 1 },
                draggable: true,
                key: "Wall",
                name: "Wall"
            },
            parent: { col: 1, row: 0 },
            rotation: 0
        },
        {
            type: {
                tileStyle: { colour: "gold", textColour: "white" },
                dimensions: { width: 1, height: 1 },
                max: 1,
                min: 1,
                category: "compulsory",
                shelfPlaced: true,
                description:
                    "The key that the player is looking for, this can be placed on top of other items, make sure to hide it well!",
                key: "Key",
                name: "Key"
            },
            parent: { col: 1, row: 1 },
            rotation: 0
        }
    ]
];

const fakeValidMap2 = [
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        {
            type: {
                tileStyle: { colour: "grey" },
                dimensions: { width: 1, height: 1 },
                draggable: true,
                key: "Wall",
                name: "Wall"
            },
            parent: { col: 4, row: 4 },
            rotation: 0
        },
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        {
            type: {
                tileStyle: { colour: "grey" },
                dimensions: { width: 1, height: 1 },
                draggable: true,
                key: "Wall",
                name: "Wall"
            },
            parent: { col: 5, row: 4 },
            rotation: 0
        },
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        {
            type: {
                tileStyle: { colour: "black", textColour: "white" },
                name: "Spawn Point",
                dimensions: { width: 1, height: 1 },
                max: 1,
                min: 1,
                category: "compulsory",
                description: "The point where the player initially spawns",
                key: "SpawnPoint"
            },
            parent: { col: 6, row: 2 },
            rotation: 0
        },
        null,
        {
            type: {
                tileStyle: { colour: "grey" },
                dimensions: { width: 1, height: 1 },
                draggable: true,
                key: "Wall",
                name: "Wall"
            },
            parent: { col: 6, row: 4 },
            rotation: 0
        },
        null,
        {
            type: {
                tileStyle: { colour: "gold", textColour: "white" },
                dimensions: { width: 1, height: 1 },
                max: 1,
                min: 1,
                category: "compulsory",
                shelfPlaced: true,
                description:
                    "The key that the player is looking for, this can be placed on top of other items, make sure to hide it well!",
                key: "Key",
                name: "Key"
            },
            parent: { col: 6, row: 6 },
            rotation: 0
        },
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        {
            type: {
                tileStyle: { colour: "grey" },
                dimensions: { width: 1, height: 1 },
                draggable: true,
                key: "Wall",
                name: "Wall"
            },
            parent: { col: 7, row: 4 },
            rotation: 0
        },
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        {
            type: {
                tileStyle: { colour: "grey" },
                dimensions: { width: 1, height: 1 },
                draggable: true,
                key: "Wall",
                name: "Wall"
            },
            parent: { col: 8, row: 4 },
            rotation: 0
        },
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ],
    [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
    ]
];

const fakeMapKeyOnShelf = [
    [
        {
            type: {
                name: "Table with Lamp",
                tileStyle: {
                    colour: "green"
                },
                dimensions: {
                    width: 1,
                    height: 1
                },
                interaction: {
                    frequency: 30,
                    duration: 2
                },
                hasShelf: true,
                key: "TableWithLamp"
            },
            parent: {
                col: 0,
                row: 0
            },
            rotation: 0,
            shelfItems: ["Key"]
        }
    ],
    [
        {
            type: {
                tileStyle: {
                    colour: "black",
                    textColour: "white"
                },
                name: "Spawn Point",
                dimensions: {
                    width: 1,
                    height: 1
                },
                max: 1,
                min: 1,
                category: "compulsory",
                description: "The point where the player initially spawns",
                key: "SpawnPoint"
            },
            parent: {
                col: 1,
                row: 0
            },
            rotation: 0
        }
    ]
];

describe("Map Validator", () => {
    describe("isMapValid", () => {
        it("Should return false for an empty map", () => {
            expect(() => isMapValid({})).toThrow();
        });

        it("Should throw if there is no path between the spawn point and the key", () => {
            expect(() => isMapValid(fakeInvalidMap)).toThrow();
        });

        it("Should not throw if there is a path between the spawn point and the key", () => {
            expect(() => isMapValid(fakeValidMap2)).not.toThrow();
        });
        it("Should not throw if there is a path between the spawn point and the key on a shelf", () => {
            expect(() => isMapValid(fakeMapKeyOnShelf)).not.toThrow();
        });
    });
});
